#!/bin/bash
directory="$HOME/.envir"
mkdir -p ${directory}

install_envir () {
  echo "Installing to /usr/local/bin"
  envir_install_dir="/usr/local/bin/envir"
  if [ -w "${envir_install_dir}" ]; then
    cp -f ${0} "${envir_install_dir}"
  fi
  echo "Installation complete. Command is: envir"
}


# Adds or updates file to $directory. This file contains env variables values
# listed in new lines in format var=value
add_env () {
  envir_file="${directory}/${3}"
  if grep -sq "${1}" "${envir_file}"
  then
    perl -p -i -e "s/${1}\=.*/${1}\=${2}/g" ${envir_file}  
  else
    echo "${1}=${2}" >> ${envir_file} 
  fi
}

# Exports every variable inside provided file 
# param1: path to file generated by add_env ()
install_env() {
  envir_env_file=$1
  shift
  shift
  if [ -f "${directory}/${envir_env_file}" ]; then
    export $(cat ${directory}/${envir_env_file} | xargs) && $@ 
  else
    echo "There is no such configuration: ${1}"
    exit 1
  fi
}

# List files inside ${directory} 
list_envs () {
  ls -A "${directory}"
}

# List files inside ${directory} 
print_env () {
  color="\033[1;34m"
  no_color="\033[0m"
  while read p; do
    env_key=$(awk -F= '{print $1}' <<< "${p}" ) 
    env_value=$(awk -F= '{print $2}' <<< "${p}" ) 
    printf "${color}${env_key}${no_color}=${env_value}\n" 
  done < "${directory}/${1}"
}


if [ "${1}" == "list" ]; then
  list_envs
  exit 0
fi

if [ "${1}" == "print" ]; then
  print_env ${2}
  exit 0
fi

if [ "${1}" == "install" ]; then
  install_envir
  exit 0
fi

# Example: ./envir.sh file.VAR=VALUE
if [[ $1 == *"="* ]]; then
  env_target=$(awk -F= '{print $1}' <<< "${1}" ) 
  env_value=$(awk -F= '{print $2}' <<< "${1}") 

  env_file=$(awk -F. '{print $1}' <<< "${env_target}")
  env_variable=$(awk -F. '{print $2}' <<< "${env_target}")
  add_env "${env_variable}" "${env_value}" "${env_file}" $
else
  # Example: ./envir.sh file
  install_env $1 $@
fi



